diff --git a/lib/constant/app_color.dart b/lib/constant/app_color.dart
index 1a3d54e..eee4da4 100644
--- a/lib/constant/app_color.dart
+++ b/lib/constant/app_color.dart
@@ -4,4 +4,7 @@ class AppColor {
   static const Color appBackgroundColor = Color.fromRGBO(255,255,255, 1);
   static const Color appBarColor = Color.fromRGBO(5, 68, 94, 1);
   static const Color appBarTextColor = Color.fromRGBO(212, 241, 244, 1);
+  static const Color textHomeColor = Color.fromRGBO(32, 32, 32, 1);
+  static const Color trashColor = Color.fromRGBO(255, 220, 220, 1);
+
 }
\ No newline at end of file
diff --git a/lib/gen/assets.gen.dart b/lib/gen/assets.gen.dart
index 8be03bc..0ca0609 100644
--- a/lib/gen/assets.gen.dart
+++ b/lib/gen/assets.gen.dart
@@ -12,17 +12,45 @@ import 'package:flutter/widgets.dart';
 class $AssetsIconsGen {
   const $AssetsIconsGen();
 
+  /// File path: assets/icons/Group 3.svg
+  String get group3 => 'assets/icons/Group 3.svg';
+
+  /// File path: assets/icons/Icon.svg
+  String get icon => 'assets/icons/Icon.svg';
+
+  /// File path: assets/icons/Onboarding1.svg
+  String get onboarding1 => 'assets/icons/Onboarding1.svg';
+
+  /// File path: assets/icons/Onboarding2.svg
+  String get onboarding2 => 'assets/icons/Onboarding2.svg';
+
+  /// File path: assets/icons/Onboarding3.svg
+  String get onboarding3 => 'assets/icons/Onboarding3.svg';
+
   /// File path: assets/icons/iran.png
   AssetGenImage get iran => const AssetGenImage('assets/icons/iran.png');
 
   /// File path: assets/icons/mic.svg
   String get mic => 'assets/icons/mic.svg';
 
+  /// File path: assets/icons/searchIcon.svg
+  String get searchIcon => 'assets/icons/searchIcon.svg';
+
   /// File path: assets/icons/wifi-off.svg
   String get wifiOff => 'assets/icons/wifi-off.svg';
 
   /// List of all assets
-  List<dynamic> get values => [iran, mic, wifiOff];
+  List<dynamic> get values => [
+    group3,
+    icon,
+    onboarding1,
+    onboarding2,
+    onboarding3,
+    iran,
+    mic,
+    searchIcon,
+    wifiOff,
+  ];
 }
 
 class Assets {
diff --git a/lib/logic/cubit/OnboardingPage_bloc/Onboarding_cubit.dart b/lib/logic/cubit/OnboardingPage_bloc/Onboarding_cubit.dart
new file mode 100644
index 0000000..20f8985
--- /dev/null
+++ b/lib/logic/cubit/OnboardingPage_bloc/Onboarding_cubit.dart
@@ -0,0 +1,36 @@
+import 'dart:async';
+import 'package:flutter/material.dart';
+import 'package:flutter_bloc/flutter_bloc.dart';
+
+class OnboardingCubit extends Cubit<int> {
+  Timer? _timer;
+  final PageController pageController;
+
+  OnboardingCubit(this.pageController) : super(0) {
+    startAutoSlide();
+  }
+
+  void startAutoSlide() {
+    _timer = Timer.periodic(Duration(seconds: 2), (timer) {
+      int nextPage = state + 1;
+
+      if (nextPage >= 3) {
+        _timer?.cancel();
+        emit(3);
+      } else {
+        emit(nextPage);
+        pageController.animateToPage(
+          nextPage,
+          duration: Duration(milliseconds: 500),
+          curve: Curves.easeInOut,
+        );
+      }
+    });
+  }
+
+  @override
+  Future<void> close() {
+    _timer?.cancel();
+    return super.close();
+  }
+}
diff --git a/lib/logic/cubit/search/search_cubit.dart b/lib/logic/cubit/search/search_cubit.dart
new file mode 100644
index 0000000..3181618
--- /dev/null
+++ b/lib/logic/cubit/search/search_cubit.dart
@@ -0,0 +1,14 @@
+import 'package:flutter_bloc/flutter_bloc.dart';
+
+import '../../event/search/search_event.dart';
+import '../../state/search/search_state.dart';
+
+
+
+class SearchBloc extends Bloc<SearchEvent, SearchState> {
+  SearchBloc() : super(SearchState('')) {
+    on<SearchEvent>((event, emit) {
+      emit(SearchState(event.query));
+    });
+  }
+}
\ No newline at end of file
diff --git a/lib/logic/cubit/voiceTexts/voiceText_cubit.dart b/lib/logic/cubit/voiceTexts/voiceText_cubit.dart
new file mode 100644
index 0000000..cdf16fa
--- /dev/null
+++ b/lib/logic/cubit/voiceTexts/voiceText_cubit.dart
@@ -0,0 +1,89 @@
+import 'package:flutter_bloc/flutter_bloc.dart';
+
+import '../../event/voiceTextsList/textList_event.dart';
+import '../../state/voiceTextsList/textList_state.dart';
+
+class VoiceTextCubit extends Cubit<List<Map<String, String>>> {
+  VoiceTextCubit() : super([]);
+
+
+  Future<void> fetchVoiceTexts() async {
+    emit([]);
+    await Future.delayed(Duration(seconds: 2));
+
+
+    bool voices = true;
+
+    if (voices) {
+      emit([
+        {
+          "title": "عنوان فایل",
+          "description": "طراح گرافیک از این متن به عنوان عنصری از ترکیب بندی برای پر کردن صفحه  ",
+          "date": "۱۴۰۲/۱۱/۳۰"
+        },
+        {
+          "title": "عنوان فایل",
+          "description": "طراح گرافیک از این متن به عنوان عنصری از ترکیب بندی برای پر کردن صفحه  ",
+          "date": "۱۴۰۲/۱۰/۲۰"
+        },
+      ]);
+    } else {
+      emit([]);
+    }
+  }
+
+  Future <void> deleteVoiceText(int index)async{
+    emit([]);
+
+
+     if(index<0 || index==state.length)
+       return;
+
+         List<Map<String, String>> updatedList = List.from(state);
+    updatedList.removeAt(index);
+
+    emit(updatedList);
+
+
+
+
+  }
+
+}
+class MoveBloc extends Bloc<MoveEvent, MoveState> {
+  MoveBloc()
+      : super(MoveState(selectedIndex: -1, positions: {}, leftPosition: 0.0)) {
+
+    on<MoveEvent>((event, emit) {
+      Map<int, double> newPositions = Map.from(state.positions);
+      if (state.selectedIndex == event.index) {
+
+        emit(MoveState(
+            selectedIndex: -1,
+            positions: state.positions,
+          leftPosition: state.leftPosition,
+
+        ));
+      } else {
+
+        emit(MoveState(
+            selectedIndex: event.index,
+            positions: state.positions,
+          leftPosition: state.leftPosition,
+
+
+        ));
+      }
+
+
+      newPositions[event.index] = (newPositions[event.index] ?? 0.0) == 0.0 ? -42.0 : 0.0;
+
+      emit(MoveState(
+        selectedIndex: event.index,
+        positions: newPositions,
+        leftPosition: newPositions[event.index] ?? 0.0,
+
+      ));
+    });
+  }
+}
\ No newline at end of file
diff --git a/lib/logic/event/search/search_event.dart b/lib/logic/event/search/search_event.dart
new file mode 100644
index 0000000..406ddc9
--- /dev/null
+++ b/lib/logic/event/search/search_event.dart
@@ -0,0 +1,4 @@
+class SearchEvent {
+  final String query;
+  SearchEvent(this.query);
+}
\ No newline at end of file
diff --git a/lib/logic/event/voiceTextsList/textList_event.dart b/lib/logic/event/voiceTextsList/textList_event.dart
new file mode 100644
index 0000000..3986e06
--- /dev/null
+++ b/lib/logic/event/voiceTextsList/textList_event.dart
@@ -0,0 +1,4 @@
+class MoveEvent {
+  final int index;
+MoveEvent(this.index);
+}
\ No newline at end of file
diff --git a/lib/logic/state/search/search_state.dart b/lib/logic/state/search/search_state.dart
new file mode 100644
index 0000000..1ee18de
--- /dev/null
+++ b/lib/logic/state/search/search_state.dart
@@ -0,0 +1,5 @@
+class SearchState {
+  final String searchQuery;
+  SearchState(this.searchQuery);
+}
+
diff --git a/lib/logic/state/voiceTextsList/textList_state.dart b/lib/logic/state/voiceTextsList/textList_state.dart
new file mode 100644
index 0000000..eaa4113
--- /dev/null
+++ b/lib/logic/state/voiceTextsList/textList_state.dart
@@ -0,0 +1,8 @@
+class MoveState {
+  final double leftPosition;
+
+  final int selectedIndex;
+  final Map<int, double> positions;
+
+  MoveState({required this.leftPosition, required this.selectedIndex, required this.positions});
+}
\ No newline at end of file
diff --git a/lib/main.dart b/lib/main.dart
index 128950c..8c56d34 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -3,11 +3,19 @@ import 'package:flutter_bloc/flutter_bloc.dart';
 import 'package:flutter_screenutil/flutter_screenutil.dart';
 import 'package:voie_writer/logic/cubit/bottom_nav/bottom_nav_cubit.dart';
 import 'package:voie_writer/presentation/screens/home_screen.dart';
+import 'package:voie_writer/presentation/screens/onboarding_screen.dart';
+import 'logic/cubit/OnboardingPage_bloc/Onboarding_cubit.dart';
+import 'gen/fonts.gen.dart';
+import 'logic/cubit/voiceTexts/voiceText_cubit.dart';
+import 'logic/cubit/search/search_cubit.dart';
+
 
 void main() {
   runApp(
     MaterialApp(
       debugShowCheckedModeBanner: false,
+      theme: ThemeData(
+        fontFamily:FontFamily.bNazanin),
       home: ScreenUtilInit(
         designSize: const Size(393, 852),
         builder:
@@ -16,8 +24,20 @@ void main() {
                 BlocProvider<BottomNavCubit>(
                   create: (context) => BottomNavCubit(),
                 ),
+                BlocProvider<OnboardingCubit>(
+                  create: (context) => OnboardingCubit(PageController()),
+                ),
+                BlocProvider<VoiceTextCubit>(
+                  create: (context) => VoiceTextCubit()..fetchVoiceTexts(),
+                ),
+                BlocProvider<SearchBloc>(
+                    create:(context)=> SearchBloc()
+                ),
+                BlocProvider<MoveBloc>(
+                    create:(context)=> MoveBloc()
+                )
               ],
-              child: HomeScreen(),
+              child:HomeScreen(),
             ),
       ),
     ),
diff --git a/lib/presentation/screens/home_screen.dart b/lib/presentation/screens/home_screen.dart
index 66eaed2..d6f097a 100644
--- a/lib/presentation/screens/home_screen.dart
+++ b/lib/presentation/screens/home_screen.dart
@@ -1,10 +1,20 @@
 import 'package:flutter/material.dart';
+import 'package:flutter_bloc/flutter_bloc.dart';
 import 'package:flutter_screenutil/flutter_screenutil.dart';
 import 'package:flutter_svg/svg.dart';
 import 'package:voie_writer/constant/app_color.dart';
 import 'package:voie_writer/gen/assets.gen.dart';
 import 'package:voie_writer/presentation/widgets/app_bar.dart';
 import 'package:voie_writer/presentation/widgets/bottom_nav.dart';
+import '../../constant/app_color.dart';
+import '../../logic/cubit/search/search_cubit.dart';
+import '../../logic/cubit/voiceTexts/voiceText_cubit.dart';
+import 'package:voie_writer/constant/app_color.dart';
+
+import '../../logic/event/search/search_event.dart';
+import '../../logic/event/voiceTextsList/textList_event.dart';
+import '../../logic/state/search/search_state.dart';
+import '../../logic/state/voiceTextsList/textList_state.dart';
 
 class HomeScreen extends StatelessWidget {
   const HomeScreen({super.key});
@@ -16,7 +26,271 @@ class HomeScreen extends StatelessWidget {
         extendBody: true,
         backgroundColor: AppColor.appBackgroundColor,
         appBar: appBar("نام اپ"),
-        body: Container(),
+
+        ///body
+        body: SingleChildScrollView(
+          scrollDirection: Axis.vertical,
+          child: BlocBuilder<VoiceTextCubit, List<Map<String, String>>>(
+            builder: (context, voices) {
+              if (voices.isEmpty) {
+                return Padding(
+                  padding: EdgeInsets.symmetric(
+                    vertical: 150.w,
+                    horizontal: 30.w,
+                  ),
+                  child: Column(
+                    children: [
+                      Container(
+                        width: 330.w,
+                        height: 357.h,
+                        decoration: BoxDecoration(
+                          borderRadius: BorderRadius.circular(24.w),
+                          color: Color(0xffE8E8E8),
+                        ),
+                      ),
+                      Padding(
+                        padding: EdgeInsets.only(top: 15.w),
+                        child: Text(
+                          "هنوز فایلی اینجا ندارید",
+                          style: TextStyle(
+                            fontSize: 28.w,
+                            fontWeight: FontWeight.w400,
+                          ),
+                          textAlign: TextAlign.center,
+                        ),
+                      ),
+                      Text(
+                        "شروع کنیم؟",
+                        style: TextStyle(
+                          fontSize: 28.w,
+                          fontWeight: FontWeight.w400,
+                        ),
+                        textAlign: TextAlign.center,
+                      ),
+                    ],
+                  ),
+                );
+              } else {
+                return Column(
+                  children: [
+                    BlocBuilder<SearchBloc, SearchState>(
+                      builder: (context, state) {
+                        return Padding(
+                          padding: EdgeInsets.all(25.w),
+                          child: TextField(
+                            onChanged: (query) {
+                              context.read<SearchBloc>().add(
+                                SearchEvent(query),
+                              );
+                            },
+                            decoration: InputDecoration(
+                              hintText: "جستجو  براساس موضوع",
+                              hintStyle: TextStyle(
+                                color: AppColor.appBarColor,
+                                fontSize: 12.w,
+                                fontWeight: FontWeight.w500,
+
+                              ),
+                              border: OutlineInputBorder(
+                                borderRadius: BorderRadius.circular(12),
+                                borderSide: BorderSide(
+                                  color: AppColor.appBarColor,
+                                  width: 1.w,
+                                ),
+                              ),
+                              contentPadding: EdgeInsets.symmetric(
+                                horizontal: 10,
+                              ),
+                              suffixIcon: Padding(
+                                padding: EdgeInsets.all(11.w),
+                                child: Container(
+                                  child: GestureDetector(
+                                    onTap: () {
+                                      print("آیکون کلیک شد");
+                                    },
+                                    child: SvgPicture.asset(
+                                      Assets.icons.searchIcon,
+                                    ),
+                                  ),
+                                ),
+                              ),
+                            ),
+
+                            textAlign: TextAlign.right,
+                          ),
+                        );
+                      },
+                    ),
+
+                    SingleChildScrollView(
+                      scrollDirection: Axis.vertical,
+
+                      child: BlocBuilder<MoveBloc, MoveState>(
+                        builder: (context, state) {
+                          return Container(
+                            width: 390.w,
+                            height: 550.h,
+                            child: ListView.builder(
+                              padding: EdgeInsets.all(16.w),
+                              itemCount: voices.length,
+                              itemBuilder: (context, index) {
+                                var item = voices[index];
+                                return Padding(
+                                  padding: EdgeInsets.all(8.w),
+                                  child: Column(
+                                    children: [
+                                      Container(width: 500.w,
+                                        height:61.w,
+                                        child: Stack(
+                                          children: [
+                                            Positioned(right:15,
+                                              child: GestureDetector(onTap: (){
+                                                // context.read<VoiceTextCubit>().deleteVoiceText(index);
+                                                print(index);
+
+                                              },
+                                                child: Container(
+                                                height: 61.w,width: 39.w,
+                                                decoration: BoxDecoration(
+                                                    borderRadius: BorderRadius.only(
+                                                      topRight: Radius.circular(8.w),
+                                                      bottomRight: Radius.circular(8.w),
+
+                                                    ),
+                                                    color: AppColor.trashColor
+                                                ),
+                                                  child:  Padding(
+                                                    padding: EdgeInsets.all(9.w),
+                                                  child: SvgPicture.asset(Assets.icons.icon,width: 24.w,height: 24.w,),)
+
+
+                                                                                            ),
+                                              ),),
+                                            AnimatedPositioned(
+                                              duration: Duration(seconds:1),
+                                              left: state.positions[index] ?? 0.0,
+
+                                              child: GestureDetector(onTap: (){
+                                                context.read<MoveBloc>().add(MoveEvent(index));
+                                              },
+                                                child: Container(
+                                                  width: 330.w,
+                                                  height: 61.h,
+                                                  decoration: BoxDecoration(
+                                                    color:
+                                                        AppColor
+                                                            .appBarTextColor,
+                                                    borderRadius:
+                                                        BorderRadius.circular(
+                                                            !(state.selectedIndex== index)?8:0.w
+                                                        ),
+                                                  ),
+                                                  child: Column(
+                                                    mainAxisAlignment:
+                                                        MainAxisAlignment
+                                                            .spaceBetween,
+                                                    children: [
+                                                      Padding(
+                                                        padding:
+                                                            EdgeInsets.only(
+                                                              top: 5.w,
+                                                              left: 15.w,
+                                                              right: 15.w,
+                                                            ),
+                                                        child: Row(
+                                                          mainAxisAlignment:
+                                                              MainAxisAlignment
+                                                                  .spaceBetween,
+                                                          children: [
+                                                            Container(
+                                                              width: 3.w,
+                                                              height: 10.w,
+                                                              child:
+                                                                  SvgPicture.asset(
+                                                                    Assets
+                                                                        .icons
+                                                                        .group3,
+                                                                  ),
+                                                            ),
+                                                            Text(
+                                                              item["title"]!,
+                                                              style: TextStyle(
+                                                                fontWeight:
+                                                                    FontWeight
+                                                                        .w400,
+                                                                fontSize: 16.w,
+                                                                color:
+                                                                    AppColor
+                                                                        .textHomeColor,
+                                                              ),
+                                                            ),
+                                                          ],
+                                                        ),
+                                                      ),
+                                                      Padding(
+                                                        padding:
+                                                            EdgeInsets.only(
+                                                              bottom: 10.w,
+                                                              left: 5.w,
+                                                              right: 5.w,
+                                                            ),
+                                                        child: Row(
+                                                          mainAxisAlignment:
+                                                              MainAxisAlignment
+                                                                  .spaceBetween,
+                                                          children: [
+                                                            Text(
+                                                              item["date"]!,
+                                                              style: TextStyle(
+                                                                color:
+                                                                    AppColor
+                                                                        .textHomeColor,
+                                                                fontSize: 10.w,
+                                                                fontWeight:
+                                                                    FontWeight
+                                                                        .w400,
+                                                              ),
+                                                            ),
+                                                            Text(
+                                                              item["description"]!,
+                                                              style: TextStyle(
+                                                                color:
+                                                                    AppColor
+                                                                        .textHomeColor,
+                                                                fontSize: 10.w,
+                                                                fontWeight:
+                                                                    FontWeight
+                                                                        .w400,
+                                                              ),
+                                                            ),
+                                                          ],
+                                                        ),
+                                                      ),
+                                                    ],
+                                                  ),
+                                                ),
+                                              ),
+                                            ),
+
+                                          ],
+                                        ),
+                                      ),
+                                    ],
+                                  ),
+                                );
+                              },
+                            ),
+                          );
+                        },
+                      ),
+                    ),
+                  ],
+                );
+              }
+            },
+          ),
+        ),
+
         bottomNavigationBar: BottomNav(),
         floatingActionButton: SizedBox(
           width: 72.w,
diff --git a/lib/presentation/screens/onboarding_screen.dart b/lib/presentation/screens/onboarding_screen.dart
new file mode 100644
index 0000000..c620820
--- /dev/null
+++ b/lib/presentation/screens/onboarding_screen.dart
@@ -0,0 +1,137 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_bloc/flutter_bloc.dart';
+import 'package:flutter_screenutil/flutter_screenutil.dart';
+import 'package:flutter_svg/svg.dart';
+import '../../logic/cubit/OnboardingPage_bloc/Onboarding_cubit.dart';
+import 'home_screen.dart';
+
+class OnboardingScreen extends StatelessWidget {
+  final PageController _pageController = PageController();
+
+  final List<Map<String, String>> _onboardingData = [
+    {
+      "image": "assets/icons/Onboarding1.svg",
+      "description": "به اپلیکیش تبدیل ویس به متن خوش آمدید",
+    },
+    {
+      "image": "assets/icons/Onboarding2.svg",
+      "description": "ویس بده متنش رو تحویل بگیر ",
+    },
+    {
+      "image": "assets/icons/Onboarding3.svg",
+      "description": "جزوه ها رو براساس موضوع دسته بندی کن",
+    },
+  ];
+
+  @override
+  Widget build(BuildContext context) {
+    return BlocProvider(
+      create: (context) => OnboardingCubit(_pageController),
+      child: BlocListener<OnboardingCubit, int>(
+        listener: (context, state) {
+          if (state == 3) {
+            Navigator.pushReplacement(
+              context,
+              MaterialPageRoute(builder: (context) => HomeScreen()),
+            );
+          }
+        },
+        child: Scaffold(
+          body: Stack(
+            children: [
+              Container(color: Color(0xffD4F1F4)),
+              BlocBuilder<OnboardingCubit, int>(
+                builder: (context, currentPage) {
+                  return PageView.builder(
+                    controller: _pageController,
+                    itemCount: _onboardingData.length,
+                    itemBuilder: (context, index) {
+                      return _buildOnboardingPage(
+                        _onboardingData[index]["image"]!,
+                        _onboardingData[index]["description"]!,
+                        currentPage,
+                      );
+                    },
+                  );
+                },
+              ),
+              Positioned(
+                bottom: 40,
+                left: 0,
+                right: 0,
+                child: BlocBuilder<OnboardingCubit, int>(
+                  builder: (context, currentPage) {
+                    return Row(
+                      mainAxisAlignment: MainAxisAlignment.center,
+                      children: List.generate(_onboardingData.length, (index) {
+                        return AnimatedContainer(
+                          duration: Duration(milliseconds: 300),
+                          margin: EdgeInsets.symmetric(horizontal: 5.w),
+                          width: 12.w,
+                          height: 12,
+                          decoration: BoxDecoration(
+                            color:
+                                currentPage == index
+                                    ? Color(0xff05445E)
+                                    : Color(0x7605445e),
+                            shape: BoxShape.circle,
+                          ),
+                        );
+                      }),
+                    );
+                  },
+                ),
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildOnboardingPage(
+    String image,
+    String description,
+    int currentPage,
+  ) {
+    return Padding(
+      padding: EdgeInsets.symmetric(horizontal: 5),
+      child: Stack(
+        children: [
+          Center(
+            child: SvgPicture.asset(
+              image,
+              width: currentPage == 1 ? 408.w : 500.w,
+              height: currentPage == 1 ? 408.w : 500.w,
+            ),
+          ),
+
+          Positioned(
+            top:
+                currentPage == 1
+                    ? 600.w
+                    : currentPage == 0
+                    ? 620.w
+                    : 620.w,
+            right: currentPage == 0 ? 1 : 2,
+            left: currentPage == 0 ? 1 : 2,
+
+            child: Padding(
+              padding: EdgeInsets.symmetric(horizontal: 24.w),
+              child: Text(
+                description,
+                style: TextStyle(
+                  fontSize: 28.w,
+                  fontWeight: FontWeight.w400,
+                  fontFamily: 'b_nazanin',
+                  height: 1.w,
+                ),
+                textAlign: TextAlign.center,
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
diff --git a/lib/presentation/widgets/bottom_nav.dart b/lib/presentation/widgets/bottom_nav.dart
index 2aeaa71..43a333c 100644
--- a/lib/presentation/widgets/bottom_nav.dart
+++ b/lib/presentation/widgets/bottom_nav.dart
@@ -19,28 +19,32 @@ class BottomNav extends StatelessWidget {
       child: Row(
         mainAxisAlignment: MainAxisAlignment.spaceBetween,
         children: [
-          IconButton(
-            icon: BlocBuilder<BottomNavCubit, int>(
-              builder:
-                  (context, state) => Icon(
-                    state == 1? Icons.person_outlined: Icons.person,
-                    size: 30.w,
-                    color: AppColor.appBarTextColor,
-                  ),
+          Expanded(
+            child: IconButton(
+              icon: BlocBuilder<BottomNavCubit, int>(
+                builder:
+                    (context, state) => Icon(
+                      state == 1? Icons.person_outlined: Icons.person,
+                      size: 30.w,
+                      color: AppColor.appBarTextColor,
+                    ),
+              ),
+              onPressed: () => context.read<BottomNavCubit>().changeTab(0),
             ),
-            onPressed: () => context.read<BottomNavCubit>().changeTab(0),
           ),
-          SizedBox(width: 40),
-          IconButton(
-            icon: BlocBuilder<BottomNavCubit, int>(
-              builder:
-                  (context, state) => Icon(
-                    state == 1? Icons.home: Icons.home_outlined,
-                    size: 30.w,
-                    color: AppColor.appBarTextColor,
-                  ),
+          SizedBox(width: 140.w),
+          Expanded(
+            child: IconButton(
+              icon: BlocBuilder<BottomNavCubit, int>(
+                builder:
+                    (context, state) => Icon(
+                      state == 1? Icons.home: Icons.home_outlined,
+                      size: 30.w,
+                      color: AppColor.appBarTextColor,
+                    ),
+              ),
+              onPressed: () => context.read<BottomNavCubit>().changeTab(1),
             ),
-            onPressed: () => context.read<BottomNavCubit>().changeTab(1),
           ),
         ],
       ),
diff --git a/pubspec.lock b/pubspec.lock
index 52bf0a1..2d46afd 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -1,6 +1,30 @@
 # Generated by pub
 # See https://dart.dev/tools/pub/glossary#lockfile
 packages:
+  _fe_analyzer_shared:
+    dependency: transitive
+    description:
+      name: _fe_analyzer_shared
+      sha256: dc27559385e905ad30838356c5f5d574014ba39872d732111cd07ac0beff4c57
+      url: "https://pub.dev"
+    source: hosted
+    version: "80.0.0"
+  analyzer:
+    dependency: transitive
+    description:
+      name: analyzer
+      sha256: "192d1c5b944e7e53b24b5586db760db934b177d4147c42fbca8c8c5f1eb8d11e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.3.0"
+  archive:
+    dependency: transitive
+    description:
+      name: archive
+      sha256: "6199c74e3db4fbfbd04f66d739e72fe11c8a8957d5f219f1f4482dbde6420b5a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.2"
   args:
     dependency: transitive
     description:
@@ -33,6 +57,70 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.1.2"
+  build:
+    dependency: transitive
+    description:
+      name: build
+      sha256: cef23f1eda9b57566c81e2133d196f8e3df48f244b317368d65c5943d91148f0
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.2"
+  build_config:
+    dependency: transitive
+    description:
+      name: build_config
+      sha256: "4ae2de3e1e67ea270081eaee972e1bd8f027d459f249e0f1186730784c2e7e33"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  build_daemon:
+    dependency: transitive
+    description:
+      name: build_daemon
+      sha256: "8e928697a82be082206edb0b9c99c5a4ad6bc31c9e9b8b2f291ae65cd4a25daa"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.4"
+  build_resolvers:
+    dependency: transitive
+    description:
+      name: build_resolvers
+      sha256: b9e4fda21d846e192628e7a4f6deda6888c36b5b69ba02ff291a01fd529140f0
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.4"
+  build_runner:
+    dependency: "direct main"
+    description:
+      name: build_runner
+      sha256: "058fe9dce1de7d69c4b84fada934df3e0153dd000758c4d65964d0166779aa99"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.15"
+  build_runner_core:
+    dependency: transitive
+    description:
+      name: build_runner_core
+      sha256: "22e3aa1c80e0ada3722fe5b63fd43d9c8990759d0a2cf489c8c5d7b2bdebc021"
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.0.0"
+  built_collection:
+    dependency: transitive
+    description:
+      name: built_collection
+      sha256: "376e3dd27b51ea877c28d525560790aee2e6fbb5f20e2f85d5081027d94e2100"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.1.1"
+  built_value:
+    dependency: transitive
+    description:
+      name: built_value
+      sha256: "28a712df2576b63c6c005c465989a348604960c0958d28be5303ba9baa841ac2"
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.9.3"
   characters:
     dependency: transitive
     description:
@@ -41,6 +129,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.4.0"
+  checked_yaml:
+    dependency: transitive
+    description:
+      name: checked_yaml
+      sha256: feb6bed21949061731a7a75fc5d2aa727cf160b91af9a3e464c5e3a32e28b5ff
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.3"
   clock:
     dependency: transitive
     description:
@@ -49,6 +145,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.1.2"
+  code_builder:
+    dependency: transitive
+    description:
+      name: code_builder
+      sha256: "0ec10bf4a89e4c613960bf1e8b42c64127021740fb21640c29c909826a5eea3e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.10.1"
   collection:
     dependency: transitive
     description:
@@ -57,6 +161,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.19.1"
+  color:
+    dependency: transitive
+    description:
+      name: color
+      sha256: ddcdf1b3badd7008233f5acffaf20ca9f5dc2cd0172b75f68f24526a5f5725cb
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.0"
+  convert:
+    dependency: transitive
+    description:
+      name: convert
+      sha256: b30acd5944035672bc15c6b7a8b47d773e41e2f17de064350988c5d02adb1c68
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.2"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      sha256: "1e445881f28f22d6140f181e07737b22f1e099a5e1ff94b0af2f9e4a463f4855"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.6"
   cupertino_icons:
     dependency: "direct main"
     description:
@@ -65,6 +193,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.0.8"
+  dart_style:
+    dependency: transitive
+    description:
+      name: dart_style
+      sha256: "27eb0ae77836989a3bc541ce55595e8ceee0992807f14511552a898ddd0d88ac"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.1"
+  dartx:
+    dependency: transitive
+    description:
+      name: dartx
+      sha256: "8b25435617027257d43e6508b5fe061012880ddfdaa75a71d607c3de2a13d244"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.0"
   fake_async:
     dependency: transitive
     description:
@@ -73,6 +217,30 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.3.2"
+  ffi:
+    dependency: transitive
+    description:
+      name: ffi
+      sha256: "289279317b4b16eb2bb7e271abccd4bf84ec9bdcbe999e278a94b804f5630418"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.4"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      sha256: a3b4f84adafef897088c160faf7dfffb7696046cb13ae90b508c2cbc95d3b8d4
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.1"
+  fixnum:
+    dependency: transitive
+    description:
+      name: fixnum
+      sha256: b6dc7065e46c974bc7c5f143080a6764ec7a4be6da1285ececdc37be96de53be
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.1"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -86,6 +254,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "9.0.0"
+  flutter_gen_core:
+    dependency: transitive
+    description:
+      name: flutter_gen_core
+      sha256: "53890b653738f34363d9f0d40f82104c261716bd551d3ba65f648770b6764c21"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.9.0"
+  flutter_gen_runner:
+    dependency: "direct main"
+    description:
+      name: flutter_gen_runner
+      sha256: de70b42eb5329f712c8b041069d081ad5fb5109f32d6d1ea9c1b39596786215d
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.9.0"
   flutter_lints:
     dependency: "direct dev"
     description:
@@ -115,6 +299,38 @@ packages:
     description: flutter
     source: sdk
     version: "0.0.0"
+  frontend_server_client:
+    dependency: transitive
+    description:
+      name: frontend_server_client
+      sha256: f64a0333a82f30b0cca061bc3d143813a486dc086b574bfb233b7c1372427694
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.0"
+  glob:
+    dependency: transitive
+    description:
+      name: glob
+      sha256: c3f1ee72c96f8f78935e18aa8cecced9ab132419e8625dc187e1c2408efc20de
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
+  graphs:
+    dependency: transitive
+    description:
+      name: graphs
+      sha256: "741bbf84165310a68ff28fe9e727332eef1407342fca52759cb21ad8177bb8d0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.2"
+  hashcodes:
+    dependency: transitive
+    description:
+      name: hashcodes
+      sha256: "80f9410a5b3c8e110c4b7604546034749259f5d6dcca63e0d3c17c9258f1a651"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.0"
   http:
     dependency: transitive
     description:
@@ -123,6 +339,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.3.0"
+  http_multi_server:
+    dependency: transitive
+    description:
+      name: http_multi_server
+      sha256: aa6199f908078bb1c5efb8d8638d4ae191aac11b311132c3ef48ce352fb52ef8
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.2.2"
   http_parser:
     dependency: transitive
     description:
@@ -131,6 +355,38 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "4.1.2"
+  image_size_getter:
+    dependency: transitive
+    description:
+      name: image_size_getter
+      sha256: "9a299e3af2ebbcfd1baf21456c3c884037ff524316c97d8e56035ea8fdf35653"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.0"
+  io:
+    dependency: transitive
+    description:
+      name: io
+      sha256: dfd5a80599cf0165756e3181807ed3e77daf6dd4137caaad72d0b7931597650b
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.5"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      sha256: "53385261521cc4a0c4658fd0ad07a7d14591cf8fc33abbceae306ddb974888dc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.7.2"
+  json_annotation:
+    dependency: transitive
+    description:
+      name: json_annotation
+      sha256: "1ce844379ca14835a50d2f019a3099f419082cfdd231cd86a142af94dd5c6bb1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.9.0"
   leak_tracker:
     dependency: transitive
     description:
@@ -163,6 +419,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "5.1.1"
+  logging:
+    dependency: transitive
+    description:
+      name: logging
+      sha256: c8245ada5f1717ed44271ed1c26b8ce85ca3228fd2ffdb75468ab01979309d61
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.0"
   matcher:
     dependency: transitive
     description:
@@ -187,6 +451,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.16.0"
+  mime:
+    dependency: transitive
+    description:
+      name: mime
+      sha256: "41a20518f0cb1256669420fdba0cd90d21561e560ac240f26ef8322e45bb7ed6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.0"
   nested:
     dependency: transitive
     description:
@@ -195,6 +467,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.0.0"
+  package_config:
+    dependency: transitive
+    description:
+      name: package_config
+      sha256: "92d4488434b520a62570293fbd33bb556c7d49230791c1b4bbd973baf6d2dc67"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.1"
   path:
     dependency: transitive
     description:
@@ -219,6 +499,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "6.1.0"
+  pool:
+    dependency: transitive
+    description:
+      name: pool
+      sha256: "20fe868b6314b322ea036ba325e6fc0711a22948856475e2c2b6306e8ab39c2a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.5.1"
+  posix:
+    dependency: transitive
+    description:
+      name: posix
+      sha256: a0117dc2167805aa9125b82eee515cc891819bac2f538c83646d355b16f58b9a
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.0.1"
   provider:
     dependency: transitive
     description:
@@ -227,6 +523,38 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "6.1.2"
+  pub_semver:
+    dependency: transitive
+    description:
+      name: pub_semver
+      sha256: "7b3cfbf654f3edd0c6298ecd5be782ce997ddf0e00531b9464b55245185bbbbd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.5"
+  pubspec_parse:
+    dependency: transitive
+    description:
+      name: pubspec_parse
+      sha256: "0560ba233314abbed0a48a2956f7f022cce7c3e1e73df540277da7544cad4082"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.5.0"
+  shelf:
+    dependency: transitive
+    description:
+      name: shelf
+      sha256: e7dd780a7ffb623c57850b33f43309312fc863fb6aa3d276a754bb299839ef12
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.4.2"
+  shelf_web_socket:
+    dependency: transitive
+    description:
+      name: shelf_web_socket
+      sha256: "3632775c8e90d6c9712f883e633716432a27758216dfb61bd86a8321c0580925"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.0"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -256,6 +584,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "2.1.4"
+  stream_transform:
+    dependency: transitive
+    description:
+      name: stream_transform
+      sha256: ad47125e588cfd37a9a7f86c7d6356dde8dfe89d071d293f80ca9e9273a33871
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.1"
   string_scanner:
     dependency: transitive
     description:
@@ -280,6 +616,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "0.7.4"
+  time:
+    dependency: transitive
+    description:
+      name: time
+      sha256: "370572cf5d1e58adcb3e354c47515da3f7469dac3a95b447117e728e7be6f461"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.5"
+  timing:
+    dependency: transitive
+    description:
+      name: timing
+      sha256: "62ee18aca144e4a9f29d212f5a4c6a053be252b895ab14b5821996cff4ed90fe"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.2"
   typed_data:
     dependency: transitive
     description:
@@ -328,6 +680,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "14.3.1"
+  watcher:
+    dependency: transitive
+    description:
+      name: watcher
+      sha256: "69da27e49efa56a15f8afe8f4438c4ec02eff0a117df1b22ea4aad194fe1c104"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.1"
   web:
     dependency: transitive
     description:
@@ -336,6 +696,22 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "1.1.0"
+  web_socket:
+    dependency: transitive
+    description:
+      name: web_socket
+      sha256: "3c12d96c0c9a4eec095246debcea7b86c0324f22df69893d538fcc6f1b8cce83"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.1.6"
+  web_socket_channel:
+    dependency: transitive
+    description:
+      name: web_socket_channel
+      sha256: "0b8e2457400d8a859b7b2030786835a28a8e80836ef64402abef392ff4f1d0e5"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.2"
   xml:
     dependency: transitive
     description:
@@ -344,6 +720,14 @@ packages:
       url: "https://pub.dev"
     source: hosted
     version: "6.5.0"
+  yaml:
+    dependency: transitive
+    description:
+      name: yaml
+      sha256: b9da305ac7c39faa3f030eccd175340f968459dae4af175130b3fc47e40d76ce
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.3"
 sdks:
   dart: ">=3.7.0 <4.0.0"
   flutter: ">=3.22.0"
diff --git a/pubspec.yaml b/pubspec.yaml
index e4658fa..a3b4ee7 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -37,6 +37,10 @@ dependencies:
   flutter_screenutil: ^5.9.3
   flutter_svg: ^2.0.17
   flutter_bloc: ^9.0.0
+  build_runner: ^2.0.0
+  flutter_gen_runner: ^5.3.0
+
+
 
 dev_dependencies:
   flutter_test:
@@ -62,7 +66,6 @@ flutter:
 
   # To add assets to your application, add an assets section, like this:
   assets:
-    - assets/images/
     - assets/icons/
 
   # An images asset can refer to one or more resolution-specific "variants", see
